{"version":3,"sources":["config.js","components/Home/index.jsx","index.jsx"],"names":["config","apiUrl","window","location","origin","Home","canvas","useRef","useState","insights","setInsights","visible","setVisibility","fileUpload","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","className","ref","canvasWidth","innerWidth","onClick","current","clear","click","style","display","type","onChange","a","async","files","length","imageData","can","ctx","drawing","img","Image","src","toDataURL","axios","post","data","then","response","console","log","JSON","stringify","ReactDOM","render","path","component","document","getElementById"],"mappings":"ySAAaA,EAAS,CACpBC,OAAQC,OAAOC,SAASC,QCqFXC,G,MAhFF,WACX,IAAMC,EAASC,iBAAO,MADL,EAEeC,mBAAS,IAFxB,mBAEVC,EAFU,KAEAC,EAFA,OAGgBF,mBAAS,QAHzB,mBAGVG,EAHU,KAGDC,EAHC,KAIXC,EAAaN,iBAAO,MAMpBO,EAAW,SAACC,GAChB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAACC,GAAD,OAAWP,EAAOO,QA4BvC,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,SAAb,+BAGF,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAYC,IAAKrB,EAAQsB,YAAiC,GAApB1B,OAAO2B,cAE/C,yBAAKH,UAAU,iBACb,yBAAKA,UAAU,WACb,4BACEI,QAAS,WACHxB,GACFA,EAAOyB,QAAQC,UAHrB,SASA,4BAAQF,QAzDG,WACjBjB,EAAWkB,QAAQE,UAwDb,2BACA,2BACEC,MAAO,CAAEC,QAAS,QAClBC,KAAK,OACLC,SAAU,aACVV,IAAKd,IAEP,4BAAQiB,QAnDK,gCAAAQ,EAAAC,OAAA,qDAGf1B,EAAWkB,QAAQS,MAAMC,OAAS,GAHnB,uBAIX1B,EAAOF,EAAWkB,QAAQS,MAAM,GAJrB,WAAAF,EAAA,MAKCxB,EAASC,IALV,OAKjB2B,EALiB,8BAOXC,EAAMrC,EAAOyB,QAAQa,IAAIC,QAAQvC,QACjCwC,EAAM,IAAIC,OACZC,IAAML,EAAIM,YACdP,EAAYI,EAAIE,IAVC,QAanBE,IACGC,KADH,UACWnD,EAAOC,OADlB,YACoC,CAChCmD,KAAMV,IAEPW,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASF,MACrB1C,EAAY+C,KAAKC,UAAUJ,EAASF,KAAM,KAAM,IAChDxC,EAAc,YApBC,wCAmDb,cAIJ,wBAAIsB,MAAO,CAAEC,QAASxB,IAAtB,oBACA,6BAAMF,MC/DZkD,IAASC,OAAO,mBAVJ,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWzD,QAMnB,MAAS0D,SAASC,eAAe,W","file":"static/js/main.76f80264.chunk.js","sourcesContent":["export const config = {\n  apiUrl: window.location.origin\n};","import React, { useRef, useState } from \"react\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport axios from \"axios\";\nimport { config } from \"../../config\";\nimport \"./style.less\";\n\nconst Home = () => {\n  const canvas = useRef(null);\n  const [insights, setInsights] = useState(\"\");\n  const [visible, setVisibility] = useState(\"none\");\n  const fileUpload = useRef(null);\n\n  const selectFile = () => {\n    fileUpload.current.click();\n  };\n\n  const toBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  };\n\n  const getImageData = async () => {\n    let imageData;\n\n    if (fileUpload.current.files.length > 0) {\n      const file = fileUpload.current.files[0];\n      imageData = await toBase64(file);\n    } else {\n      const can = canvas.current.ctx.drawing.canvas;\n      const img = new Image();\n      img.src = can.toDataURL();\n      imageData = img.src;\n    }\n\n    axios\n      .post(`${config.apiUrl}/insight`, {\n        data: imageData,\n      })\n      .then((response) => {\n        console.log(response.data);\n        setInsights(JSON.stringify(response.data, null, 4));\n        setVisibility(\"block\");\n      });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"centerContent\">\n        <p className=\"title\">your handwriting sucks.com</p>\n      </div>\n\n      <div className=\"centerContent\">\n        <CanvasDraw ref={canvas} canvasWidth={window.innerWidth * 0.8} />\n      </div>\n      <div className=\"centerContent\">\n        <div className=\"toolbar\">\n          <button\n            onClick={() => {\n              if (canvas) {\n                canvas.current.clear();\n              }\n            }}\n          >\n            Clear\n          </button>\n          <button onClick={selectFile}>Upload a sample instead</button>\n          <input\n            style={{ display: \"none\" }}\n            type=\"file\"\n            onChange={() => {}}\n            ref={fileUpload}\n          />\n          <button onClick={getImageData}>Judge Me</button>\n        </div>\n      </div>\n\n      <h1 style={{ display: visible }}>Backend Response</h1>\n      <pre>{insights}</pre>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./styles/style.less\";\n\nimport Home from \"./components/Home\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}